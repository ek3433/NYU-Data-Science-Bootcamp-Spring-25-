#NYU Data Science Bootcamp- Spring 2025: Week 4 Assignment

I am using https://sqliteonline.com/ to check my work and I've used the database that was created during the session using:

CREATE TABLE ITEMS (
    Item_id INTEGER PRIMARY KEY,
    Item_name TEXT,
    Price DECIMAL(10, 2),
    Department TEXT
);

CREATE TABLE CUSTOMERS (
    Customer_id INTEGER PRIMARY KEY,
    First_name TEXT,
    Last_name TEXT,
    Address TEXT
);

CREATE TABLE SALES (
    Date DATE,
    Order_id INTEGER PRIMARY KEY,
    Item_id INTEGER,
    Customer_id INTEGER,
    Quantity INTEGER,
    Revenue DECIMAL(10, 2),
    FOREIGN KEY (Item_id) REFERENCES ITEMS(Item_id),
    FOREIGN KEY (Customer_id) REFERENCES CUSTOMERS(Customer_id)
);

and 

INSERT INTO ITEMS (Item_id, Item_name, Price, Department) VALUES
(1, 'Laptop', 1200.00, 'Electronics'),
(2, 'Smartphone', 800.00, 'Electronics'),
(3, 'Headphones', 100.00, 'Electronics'),
(4, 'T-shirt', 20.00, 'Clothing'),
(5, 'Jeans', 50.00, 'Clothing');

INSERT INTO CUSTOMERS (Customer_id, First_name, Last_name, Address) VALUES
(1, 'John', 'Doe', '123 Main St, Anytown, USA'),
(2, 'Jane', 'Smith', '456 Elm St, Othertown, USA'),
(3, 'Alice', 'Johnson', '789 Maple St, Yetanothertown, USA');

INSERT INTO SALES (Date, Order_id, Item_id, Customer_id, Quantity, Revenue) VALUES
('2024-03-01', 1001, 1, 1, 2, 2400.00),
('2024-03-05', 1002, 2, 2, 1, 800.00),
('2024-03-10', 1003, 3, 3, 3, 300.00),
('2024-03-15', 1004, 4, 1, 5, 100.00),
('2024-03-20', 1005, 5, 2, 2, 100.00),
('2023-03-18', 1006, 1, 1, 2, 2400.00),
('2023-03-18', 1007, 2, 2, 1, 800.00),
('2023-03-18', 1008, 3, 3, 3, 300.00),
('2023-01-10', 1009, 4, 1, 5, 100.00),
('2023-02-15', 1010, 5, 2, 2, 100.00),
('2022-05-20', 1011, 1, 1, 3, 3600.00),
('2022-06-25', 1012, 2, 2, 2, 1600.00),
('2022-07-30', 1013, 3, 3, 4, 400.00),
('2022-08-05', 1014, 4, 1, 6, 120.00),
('2022-09-10', 1015, 5, 2, 3, 150.00);


Q1: Pull total number of orders that were completed on 18th March 2023

SELECT COUNT(*) AS Total_Orders
FROM SALES
WHERE Date = '2023-03-18';

Total_Orders
3

Q2:Pull total number of orders that were completed on 18th March 2023 with the first name ‘John’ and last name Doe’

SELECT COUNT(*) AS Orders_By_John_Doe
FROM SALES
JOIN CUSTOMERS ON SALES.Customer_id = CUSTOMERS.Customer_id
WHERE SALES.Date = '2023-03-18' 
AND CUSTOMERS.First_name = 'John' 
AND CUSTOMERS.Last_name = 'Doe';

Orders_By_John_Doe
1

Q3:Pull total number of customers that purchased in January 2023 and the average amount spend per customer

SELECT COUNT(DISTINCT Customer_id) AS Total_Customers,
       AVG(Revenue) AS Avg_Spending
FROM SALES
WHERE Date BETWEEN '2023-01-01' AND '2023-01-31';

Total_Customers	Avg_Spending
1		100

Q4:Pull the departments that generated less than $600 in 2022

SELECT ITEMS.Department, SUM(SALES.Revenue) AS Total_Revenue
FROM SALES
JOIN ITEMS ON SALES.Item_id = ITEMS.Item_id
WHERE SALES.Date BETWEEN '2022-01-01' AND '2022-12-31'
GROUP BY ITEMS.Department
HAVING Total_Revenue < 600;

Department	Total_Revenue
Clothing	270

Q5:What is the most and least revenue we have generated by an order

SELECT 
    MAX(Revenue) AS Most_Revenue, 
    MIN(Revenue) AS Least_Revenue
FROM SALES;

Most_Revenue	Least_Revenue
3600		100

Q6:What were the orders that were purchased in our most lucrative order

SELECT 
    SALES.Order_id, 
    SALES.Date, 
    SALES.Quantity, 
    SALES.Revenue, 
    CUSTOMERS.First_name, 
    CUSTOMERS.Last_name, 
    ITEMS.Item_name, 
FROM SALES
JOIN CUSTOMERS ON SALES.Customer_id = CUSTOMERS.Customer_id
JOIN ITEMS ON SALES.Item_id = ITEMS.Item_id
WHERE SALES.Revenue = (SELECT MAX(Revenue) FROM SALES);

Order_id	Date		Quantity	Revenue		First_name	Last_name	Item_name
1011		2022-05-20	3		3600		John 		Doe		Laptop		


